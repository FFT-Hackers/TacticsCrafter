include(ExternalProject)

set(JSONCPP_VERSION            1.9.4)
set(JSONCPP_INSTALL_DIR        "${CMAKE_BINARY_DIR}/_vendor")
set(JSONCPP_INCLUDE_DIRECTORY  "${JSONCPP_INSTALL_DIR}/include")
set(JSONCPP_LIBRARY_DIRECTORY  "${JSONCPP_INSTALL_DIR}/lib")

file(MAKE_DIRECTORY "${JSONCPP_INCLUDE_DIRECTORY}")
file(MAKE_DIRECTORY "${JSONCPP_LIBRARY_DIRECTORY}")

if (WIN32)
    set(JSONCPP_IMPORTED_LOCATION          "${JSONCPP_INSTALL_DIR}/bin/${CMAKE_SHARED_LIBRARY_PREFIX}jsoncpp${CMAKE_SHARED_LIBRARY_SUFFIX}")
    set(JSONCPP_IMPORTED_IMPLIB            "${JSONCPP_INSTALL_DIR}/lib/${CMAKE_IMPORT_LIBRARY_PREFIX}jsoncpp${CMAKE_IMPORT_LIBRARY_SUFFIX}")
    set(JSONCPP_IMPORTED_LOCATION_DEBUG    "${JSONCPP_IMPORTED_LOCATION}")
    set(JSONCPP_IMPORTED_IMPLIB_DEBUG      "${JSONCPP_IMPORTED_IMPLIB}")
else()
    set(JSONCPP_IMPORTED_LOCATION          "${JSONCPP_INSTALL_DIR}/lib/${CMAKE_SHARED_LIBRARY_PREFIX}jsoncpp${CMAKE_SHARED_LIBRARY_SUFFIX}")
    set(JSONCPP_IMPORTED_LOCATION_DEBUG    "${JSONCPP_IMPORTED_LOCATION}")
endif()

ExternalProject_Add(
    ep_jsoncpp
    URL             "https://github.com/open-source-parsers/jsoncpp/archive/refs/tags/${JSONCPP_VERSION}.tar.gz"
    INSTALL_DIR     "${JSONCPP_INSTALL_DIR}"
    CMAKE_ARGS
        "-DCMAKE_BUILD_TYPE=$<CONFIG>"
        "-DCMAKE_INSTALL_PREFIX=<INSTALL_DIR>"
        "-DJSONCPP_WITH_TESTS=OFF"
        "-DJSONCPP_WITH_POST_BUILD_UNITTEST=OFF"
        "-DJSONCPP_WITH_STRICT_ISO=OFF"
        "-DJSONCPP_WITH_PKGCONFIG_SUPPORT=OFF"
        "-DJSONCPP_WITH_CMAKE_PACKAGE=OFF"
        "-DBUILD_STATIC_LIBS=OFF"
        "-DBUILD_OBJECT_LIBS=OFF"
)

add_library(JsonCpp::JsonCpp SHARED IMPORTED GLOBAL)
set_target_properties(
    JsonCpp::JsonCpp
    PROPERTIES

    INTERFACE_INCLUDE_DIRECTORIES   "${JSONCPP_INCLUDE_DIRECTORY}"
    IMPORTED_LOCATION_DEBUG         "${JSONCPP_IMPORTED_LOCATION_DEBUG}"
    IMPORTED_LOCATION               "${JSONCPP_IMPORTED_LOCATION}"
    IMPORTED_IMPLIB_DEBUG           "${JSONCPP_IMPORTED_IMPLIB_DEBUG}"
    IMPORTED_IMPLIB                 "${JSONCPP_IMPORTED_IMPLIB}"
)
add_dependencies(JsonCpp::JsonCpp ep_jsoncpp)
